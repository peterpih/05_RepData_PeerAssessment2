z<- as.Date("2/20/1951", format="%d/%m/%Y")
class(z)
z
z<- as.Date("2/20/1951", format="%m/%d/%Y")
z
z<- format("2/20/1951 0:00:00", format="%m/%d/%Y "%H:%M:%S"")
z<- format("2/20/1951 0:00:00", format="%m/%d/%Y "%H:%M:%S")
z<- format("2/20/1951", format="%m/%d/%Y")
z
z<- as.Date("2/20/1951", format="%m/%d/%Y")
z
z<- as.Date("2/20/1951 0:00:00", format="%m/%d/%Y %H:%M:%S")
z
class(z)
format(z, "%Y%m%d")
?frequency
head(fatal_subset)
View(storm_data)
names(fatal_injury)
unique(fatal_injury$STATE)
a<-fatal_injury[fatal_injury$STATE=="NH"]
a<-subset(fatal_injury, fatal_injury$STATE=="NH")
nrow(a)
unique(a$EVTYPE)
b<-evtype_aggregate(a)
evtype_aggregate <- function(x, field="FATALITIES"){
result <- data.frame()
types_u <- unique(x$EVTYPE)
for (i in types_u){
type_subset <- subset(x, x$EVTYPE == i)
if (field == "FATALITIES") t_sum <- sum(type_subset$FATALITIES)
else if (field == "INJURIES") t_sum <- sum(type_subset$INJURIES)
else if (field == "PROPERTY") t_sum <- sum(type_subset$PROPDMG)
else if (field == "CROPS") t_sum <- sum(type_subset$CROPDMG)
result <- rbind(result, data.frame(EVTYPE=i, count=nrow(type_subset), sum=t_sum))
}
result<-result[with(result, order(-result$sum)),]   # sort the totals descending, the worst on top
result
}
b<-evtype_aggregate(a)
b
unique(fatal_injury$STATE)
a<-subset(fatal_injury, fatal_injury$STATE=="TX")
b<-evtype_aggregate(a)
b
fatal_summary
rm(list=ls())
head(property_summary, 5)
property_reclassify <- evtype_reclassify(property_subset)
property_summary <- evtype_aggregate(property_reclassify, "PROPERTY")
property_summary <- cbind(property_summary, avg=as.integer(property_summary$sum/property_summary$count+0.5))
property_reclassify <- evtype_reclassify(property_subset)
property_summary <- evtype_aggregate(property_reclassify, "PROPERTY")
property_summary <- cbind(property_summary, avg=as.integer(property_summary$sum/property_summary$count+0.5))
storm_data <- read.csv("data/repdata-data-StormData.csv.bz2")
storm_data <- read.csv("data/repdata-data-StormData.csv.bz2")
fatal_injury <- subset(storm_data, storm_data$FATALITIES > 0 | storm_data$INJURIES > 0)
property_crop <- subset(storm_data, storm_data$PROPDMG > 0 | storm_data$CROPDMG > 0)
property_crop$PROPDMGEXP <- toupper(property_crop$PROPDMGEXP)
property_subset <- subset(property_crop, property_crop$PROPDMG > 0)
crop_subset <- subset(property_crop, property_crop$CROPDMG > 0)
property_reclassify <- evtype_reclassify(property_subset)
property_summary <- evtype_aggregate(property_reclassify, "PROPERTY")
property_summary <- cbind(property_summary, avg=as.integer(property_summary$sum/property_summary$count+0.5))
crop_reclassify <- evtype_reclassify(crop_subset)
crop_summary <- evtype_aggregate(crop_reclassify, "CROPS")
crop_summary <- cbind(crop_summary, avg=as.integer(crop_summary$sum/crop_summary$count+0.5))
property_subset <- subset(property_crop, property_crop$PROPDMG > 0)
crop_subset <- subset(property_crop, property_crop$CROPDMG > 0)
property_reclassify <- evtype_reclassify(property_subset)
evtype_reclassify <- function(x) {
x$EVTYPE <- as.character(x$EVTYPE)
x$EVTYPE[grepl("TORNADO", x$EVTYPE, ignore.case=TRUE)] <-"TORNADO"
x$EVTYPE[grepl("FUNNEL CLOUD", x$EVTYPE, ignore.case=TRUE)] <-"TORNADO"
x$EVTYPE[grepl("TORNDAO", x$EVTYPE, ignore.case=TRUE)] <-"TORNADO"
x$EVTYPE[grepl("HEAT", x$EVTYPE, ignore.case=TRUE)] <-"HEAT"
x$EVTYPE[grepl("WARM", x$EVTYPE, ignore.case=TRUE)] <-"HEAT"
x$EVTYPE[grepl("HYPERTHERMIA", x$EVTYPE, ignore.case=TRUE)] <-"HEAT"
x$EVTYPE[grepl("COLD", x$EVTYPE, ignore.case=TRUE)] <-"COLD"
x$EVTYPE[grepl("LOW TEMPERATURE", x$EVTYPE, ignore.case=TRUE)] <-"COLD"
x$EVTYPE[grepl("HYPOTHERMIA", x$EVTYPE, ignore.case=TRUE)] <-"COLD"
x$EVTYPE[grepl("FREEZE", x$EVTYPE, ignore.case=TRUE)] <-"COLD"
x$EVTYPE[grepl("COOL AND WET", x$EVTYPE, ignore.case=TRUE)] <-"COLD"
x$EVTYPE[grepl("WIND", x$EVTYPE, ignore.case=TRUE)] <-"WIND"
x$EVTYPE[grepl("HIGH", x$EVTYPE, ignore.case=TRUE)] <-"WIND"
x$EVTYPE[grepl("DOWNBURST", x$EVTYPE, ignore.case=TRUE)] <-"WIND"
x$EVTYPE[grepl("SEVERE TURBULENCE", x$EVTYPE, ignore.case=TRUE)] <-"WIND"
x$EVTYPE[grepl("GUSTNADO", x$EVTYPE, ignore.case=TRUE)] <-"WIND"
x$EVTYPE[grepl("FLOOD", x$EVTYPE, ignore.case=TRUE)] <-"FLOOD"
x$EVTYPE[grepl("FLD", x$EVTYPE, ignore.case=TRUE)] <-"FLOOD"
x$EVTYPE[grepl("HIGH WATER", x$EVTYPE, ignore.case=TRUE)] <-"FLOOD"
x$EVTYPE[grepl("RAPIDLY RISING WATER", x$EVTYPE, ignore.case=TRUE)] <-"FLOOD"
x$EVTYPE[grepl("DAM BREAK", x$EVTYPE, ignore.case=TRUE)] <-"FLOOD"
x$EVTYPE[grepl("SNOW", x$EVTYPE, ignore.case=TRUE)] <- "PRECIP"
x$EVTYPE[grepl("RAIN", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("STORM", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("HAIL", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("BLIZZARD", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("WINTER", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("SLEET", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("HEAVY SHOWER", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("MIXED PRECIP", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("WINTRY MIX", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("DRIZZLE", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("TSTWM", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("HEAVY PRECIPITATION", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("MICROBURST", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("HEAVY MIX", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("EXCESSIVE WETNESS", x$EVTYPE, ignore.case=TRUE)] <-"PRECIP"
x$EVTYPE[grepl("AVALANCE", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("AVALANCHE", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("LANDSLIDES", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("MUDSLIDE", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("MUD SLIDE", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("ROCK SLIDE", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("LANDSLUMP", x$EVTYPE, ignore.case=TRUE)] <-"LANDSLIDE"
x$EVTYPE[grepl("HEAVY SEAS", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HIGH SEAS", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HIGH SURF", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HIGH WAVES", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HIGH SWELL", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HEAVY SURF", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("WATERSPOUT", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("ROUGH SURF", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("ROUGH SEAS", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("RIP CURRENT", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("MARINE MISHAP", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("MARINE ACCIDENT", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HAZARDOUS SURF", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("ROGUE WAVE", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("TSUNAMI", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("DROWNING", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("COASTAL", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("LOW TIDE", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("HEAVY SWELLS", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("ICE FLOES", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("SEICHE", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("BEACH EROSION", x$EVTYPE, ignore.case=TRUE)] <-"SURF"
x$EVTYPE[grepl("GLAZE", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("ICY ROADS", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("BLACK ICE", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("ICE ROAD", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("ICE ON ROAD", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("FREEZING SPRAY", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("FROST", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("ICE JAM", x$EVTYPE, ignore.case=TRUE)] <-"ICE"
x$EVTYPE[grepl("FIRE", x$EVTYPE, ignore.case=TRUE)] <-"FIRE"
x$EVTYPE[grepl("DROUGHT", x$EVTYPE, ignore.case=TRUE)] <-"FIRE"
x$EVTYPE[grepl("FOG", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("DRY MICROBURST", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("DUST DEVIL", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("BLOWING DUST", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("DENSE SMOKE", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("VOLCANIC", x$EVTYPE, ignore.case=TRUE)] <-"VISIBILITY"
x$EVTYPE[grepl("HURRICANE", x$EVTYPE, ignore.case=TRUE)] <-"HURRICANE"
x$EVTYPE[grepl("TYPHOON", x$EVTYPE, ignore.case=TRUE)] <-"HURRICANE"
x$EVTYPE[grepl("TROPICAL", x$EVTYPE, ignore.case=TRUE)] <-"HURRICANE"
x$EVTYPE[grepl("LIGHTNING", x$EVTYPE, ignore.case=TRUE)] <-"LIGHTNING"
x$EVTYPE[grepl("LIGHTING", x$EVTYPE, ignore.case=TRUE)] <-"LIGHTNING"
x$EVTYPE[grepl("LIGNTNING", x$EVTYPE, ignore.case=TRUE)] <-"LIGHTNING"
x$EVTYPE[grepl("OTHER", x$EVTYPE, ignore.case=TRUE)] <-"OTHER"
x$EVTYPE[grepl("URBAN", x$EVTYPE, ignore.case=TRUE)] <-"OTHER"
return(x)
}
evtype_aggregate <- function(x, field="FATALITIES"){
result <- data.frame()
types_u <- unique(x$EVTYPE)
for (i in types_u){
type_subset <- subset(x, x$EVTYPE == i)
if (field == "FATALITIES") t_sum <- sum(type_subset$FATALITIES)
else if (field == "INJURIES") t_sum <- sum(type_subset$INJURIES)
else if (field == "PROPERTY") t_sum <- sum(type_subset$PROPDMG)
else if (field == "CROPS") t_sum <- sum(type_subset$CROPDMG)
result <- rbind(result, data.frame(EVTYPE=i, count=nrow(type_subset), sum=t_sum))
}
result<-result[with(result, order(-result$sum)),]   # sort the totals descending, the worst on top
result
}
property_subset <- subset(property_crop, property_crop$PROPDMG > 0)
crop_subset <- subset(property_crop, property_crop$CROPDMG > 0)
property_reclassify <- evtype_reclassify(property_subset)
property_summary <- evtype_aggregate(property_reclassify, "PROPERTY")
property_summary <- cbind(property_summary, avg=as.integer(property_summary$sum/property_summary$count+0.5))
crop_reclassify <- evtype_reclassify(crop_subset)
crop_summary <- evtype_aggregate(crop_reclassify, "CROPS")
crop_summary <- cbind(crop_summary, avg=as.integer(crop_summary$sum/crop_summary$count+0.5))
crop_summary
head(property_summary, 5)
head(crop_summary, 5)
names(property_subset)
property_subset$BGN_DATE <- as.Date(property_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
property_subset$BGN_DATE
format(property_subset$BGN_DATE, "%Y")
y<-format(property_subset$BGN_DATE, "%Y")
unique(y)
property_subset$BGN_DATE <- as.Date(property_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
property_subset$BGN_DATE <- format(property_subset$BGN_DATE,"%Y")
property_subset$BGN_DATE
y
y <- unique(property_subset$BGN_DATE)
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset(subset(property_subset$BGN_DATE == i))
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset <- subset(property_subset$BGN_DATE == i))
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset <- subset(property_subset, property_subset$BGN_DATE == i))
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
class*y)
class(y)
y
property_subset$BGN_DATE
property_subset$BGN_DATE[1]
property_subset$BGN_DATE[1] == "1950"
result <- data.frame()
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset <- subset(property_subset, property_subset$BGN_DATE == i))
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
property_subset$BGN_DATE <- as.numeric(property_subset$BGN_DATE)
property_subset$BGN_DATE
result <- data.frame()
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset <- subset(property_subset, property_subset$BGN_DATE == i))
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
result <- data.frame()
y <- unique(property_subset$BGN_DATE)
for (i in y){
y_subset <- subset(property_subset, property_subset$BGN_DATE == i)
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
result
plot(result$year, result$count)
nrow(property_subset)
by_year <- function(x){
result <- data.frame()
y <- unique(x$BGN_DATE)
for (i in y){
y_subset <- subset(x, x$BGN_DATE == i)
result <- rbind(result, data.frame(year=i, count=nrow(y_subset)))
}
result
}
by_year(property_subset)
crop_subset$BGN_DATE <- as.Date(crop_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
crop_subset$BGN_DATE <- as.numeric(format(crop_subset$BGN_DATE,"%Y"))
property_result <- by_year(property_subset)
crop_result <-result <- by_year(crop_subset)
plot(crop_result$year, crop_result$count)
crop_subset$BGN_DATE <- as.Date(crop_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
crop_subset$BGN_DATE <- as.numeric(format(crop_subset$BGN_DATE,"%Y"))
class(crop_subset$BGN_DATE)
crop_subset$BGN_DATE
fatal_subset$BGN_DATE <- as.Date(fatal_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
fatal_subset$BGN_DATE <- as.numeric(format(fatal_subset$BGN_DATE,"%Y"))
View(property_crop)
fatal_subset <- subset(fatal_injury, fatal_injury$FATALITIES > 0)
fatal_subset$BGN_DATE <- as.Date(fatal_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
fatal_subset$BGN_DATE <- as.numeric(format(fatal_subset$BGN_DATE,"%Y"))
fatal_subset$BGN_DATE
by_year(fatal_subset)
fatal_result <- by_year(fatal_subset)
fatal_result
plot(fatal_result$year, fatal_result$count)
injury_subset <- subset(fatal_injury, fatal_injury$INJURIES > 0)
injury_reclassify <- evtype_reclassify(injury_subset)
injury_summary <- evtype_aggregate(injury_reclassify, "INJURIES")
injury_reclassify <- evtype_reclassify(injury_subset)
injury_summary <- evtype_aggregate(injury_reclassify, "INJURIES")
injury_result <- by_year(injury_subset)
injury$subset
injury_subset$subset
injury_subset$BGN_DATE
crop_subset <- subset(property_crop, property_crop$CROPDMG > 0)
injury_subset$BGN_DATE
injury_subset$BGN_DATE <- as.Date(injury_subset$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
injury_subset$BGN_DATE
injury_subset$BGN_DATE <- as.numeric(format(injury_subset$BGN_DATE,"%Y"))
injury_subset$BGN_DATE
injury_result <- buy_year(injury_subset)
injury_result <- by_year(injury_subset)
injury_result
plot(injury_result$year, injury_result$count)
plot(property_result$year, property_result$count)
plot(injury_result$year, injury_result$count)
plot(fatal_result$year, fatal_result$count)
plot(crop_result$year, crop_result$count)
plot(property_result$year, property_result$count)
plot(fatal_result$year, fatal_result$count)
plot(crop_result$year, crop_result$count)
plot(fatal_result$year, fatal_result$count)
plot(property_result$year, property_result$count)
plot(injury_result$year, injury_result$count)
barplot(crop_summary)
barplot(crop_summary$count)
barplot(fatal_summary$count)
barplot(fatal_result$count)
barplot(injury_summary$count)
barplot(property_summary$count)
nrow(property_summary)
property_summary
barplot(property_summary$count, names.arg=property_summary$EVTYPE)
crop_summary
crop_summary <- cbind(crop_summary, pct=round(crop_summary$sum/sum(crop_summary$sum)*100, 2)
)
crop_summary
evtype_aggregate <- function(x, field="FATALITIES"){
result <- data.frame()
types_u <- unique(x$EVTYPE)
for (i in types_u){
type_subset <- subset(x, x$EVTYPE == i)
if (field == "FATALITIES") t_sum <- sum(type_subset$FATALITIES)
else if (field == "INJURIES") t_sum <- sum(type_subset$INJURIES)
else if (field == "PROPERTY") t_sum <- sum(type_subset$PROPDMG)
else if (field == "CROPS") t_sum <- sum(type_subset$CROPDMG)
result <- rbind(result, data.frame(EVTYPE=i, count=nrow(type_subset), sum=t_sum))
}
result<-result[with(result, order(-result$sum)),]   # sort the totals descending, the worst on top
result <- cbind(result, pct=round(result$sum/sum(result$sum)*100, 2))
result
}
injury_reclassify <- evtype_reclassify(injury_subset)
injury_summary <- evtype_aggregate(injury_reclassify, "INJURIES")
injury_reclassify <- evtype_reclassify(injury_subset)
injury_summary <- evtype_aggregate(injury_reclassify, "INJURIES")
injury_summary
evtype_aggregate <- function(x, field="FATALITIES"){
result <- data.frame()
types_u <- unique(x$EVTYPE)
for (i in types_u){
type_subset <- subset(x, x$EVTYPE == i)
if (field == "FATALITIES") t_sum <- sum(type_subset$FATALITIES)
else if (field == "INJURIES") t_sum <- sum(type_subset$INJURIES)
else if (field == "PROPERTY") t_sum <- sum(type_subset$PROPDMG)
else if (field == "CROPS") t_sum <- sum(type_subset$CROPDMG)
result <- rbind(result, data.frame(EVTYPE=i, count=nrow(type_subset), sum=t_sum))
}
result<-result[with(result, order(-result$sum)),]   # sort the totals descending, the worst on top
#
# Average per incident
#
result <- cbind(result, avg=as.integer(result$sum/result$count+0.5))
#
# Add the % of sum for each row
#
result <- cbind(result, pct=round(result$sum/sum(result$sum)*100, 2))
result
}
injury_reclassify <- evtype_reclassify(injury_subset)
injury_summary <- evtype_aggregate(injury_reclassify, "INJURIES")
injury_summary
property_reclassify <- evtype_reclassify(property_subset)
property_summary <- evtype_aggregate(property_reclassify, "PROPERTY")
crop_reclassify <- evtype_reclassify(crop_subset)
crop_summary <- evtype_aggregate(crop_reclassify, "CROPS")
crop_summary
prop_summary
property_summary
hist(fatal_subset$FATALITIES)
hist(fatal_subset$FATALITIES, binwidth=0.1)
fatal_subset$FATALITIES
barplot(property_summary$count, names.arg=property_summary$EVTYPE)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.lad=1.5)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.lab=1.5)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.axis =1.5)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.axis =1)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.lab =1)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.lab =2)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.names =2)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.names =1)
barplot(property_summary$count, names.arg=property_summary$EVTYPE, cex.names =.5)
plot(property_result$year, property_result$count)
plot(property_result$year, property_result$count) + xlab("Year")
plot(property_result$year, property_result$count) + xlabel("Year")
plot(property_result$year, property_result$count, xlab="Year")
plot(property_result$year, property_result$count, xlab="Year", ylab="Incident Count", main="Property")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop", type="l")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop", type="lw")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop", type="lb")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop", type="lp")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop", type="p")
plot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop Damage") + geom_bar()
barplot(crop_result$year, crop_result$count, xlab="Year", ylab="Incident Count", main="Crop Damage")
plot(injury_result$year, injury_result$count, xlab="Year", ylab="Incident Count", main="Injuries")
plot(fatal_result$year, fatal_result$count, xlab="Year", ylab="Incident Count", main="Fatalities")
fatal_result
fatal_result <- cbind(fatal_result, type="Fatalities")
fatal_result
injury_result <- cbind(injury_result, type="Injuries")
injury_result
a_result <- fatal_result
a_result<-rbind(a_result, injury_result)
plot(a_result$year, a_result$count)
plot(a_result$year, a_result$count, col=a_result$type)
legend(a_result$year, a_result$count, col=a_result$type)
?legend
legend(a_result$year, a_result$count, c("Fatalities", "Injuries"), col=a_result$type)
plot(a_result$year, a_result$count, col=c(1,2))
plot(a_result$year, a_result$count, col=c(1,2,3))
plot(a_result$year, a_result$count, col=c(1,2))
legend(a_result$year, a_result$count, c("Fatalities", "Injuries"), col=a_result$type)
plot(a_result$year, a_result$count, col=a_result$type)
plot(injury_result$year, injury_result$count)
plot(fatal_result$year, fatal_result$count)
plot(injury_result$year, injury_result$count)
plot(fatal_result$year, fatal_result$count)
plot(injury_result$year, injury_result$count)
plot(fatal_result$year, fatal_result$count)
plot(a_result$year, a_result$count, col=a_result$type)
plot(injury_result$year, injury_result$count)
plot(a_result$year, a_result$count, col=a_result$type)
plot(a_result$year, a_result$count, col=a_result$type)
plot(fatal_result$year, fatal_result$count)
plot(a_result$year, a_result$count, col=a_result$type)
legend(0,0, c("fatal","injury"))
legend("topright", legend=c("fatal","injury"), )
legend("topright", legend=c("fatal","injury"), col=c(1,2))
legend("topright", legend=c("fatal","injury"), col=c(1,2), pch=0)
legend("topright", legend=c("fatal","injury"), col=c(1,2), pch=1)
plot(a_result$year, a_result$count, col=a_result$type)
legend("topright", legend=c("fatal","injury"), col=c(1,2), pch=1)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topright", legend=c("fatal","injury"), col=c(1,2), pch=1)
property_result
property_result <- cbind(property_result, type="Property")
crop_result <- cbind(crop_result, type="Crops")
a_result <- property_result
a_result<-rbind(a_result, crop_result)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topright", legend=c("property","crops"), col=c(1,2), pch=1)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("property","crops"), col=c(1,2), pch=1)
plot(crop_result$year, crop_result$count)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("property","crops"), col=c(1,2), pch=1)
property_result
crop_result
setwd("..")
setwd("RepData_PeerAssessment2")
fatal_summary
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("property","crops"), col=c(1,2), pch=1)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("fatal","injury"), col=c(1,2), pch=1)
nrow(injury_summary)
nrow(fatal_summary)
fatal_reclassify <- evtype_reclassify(fatal_subset)
fatal_summary <- evtype_aggregate(fatal_reclassify, "FATALITIES")
fatal_reclassify <- evtype_reclassify(fatal_subset)
fatal_summary <- evtype_aggregate(fatal_reclassify, "FATALITIES")
View(result)
injury_summary
injury_summary <- cbind(injury_summary, type="Injuries")
fatal_summary <- cbind(fatal_summary, type="Fatalities")
a_result<-rbind(fatal_summary, injury_summary)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("fatal","injury"), col=c(1,2), pch=1)
a_result$year
a_result
fatal_year <- by_year(fatal_subset)
fatal_year
fatal_year <- by_year(fatal_subset)
injury_year <- by_year(injury_subset)
injury_year <- cbind(injury_year, type="Injuries")
fatal_year <- cbind(fatal_year, type="Fatalities")
a_result<-rbind(fatal_year, injury_year)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("fatal","injury"), col=c(1,2), pch=1)
property_year <- by_year(property_subset)
crop_year <- by_year(crop_subset)
property_year <- cbind(property_year, type="Property")
crop_year <- cbind(crop_year, type="Crops")
a_result<-rbind(property_year, crop_year)
plot(a_result$year, a_result$count, col=a_result$type, xlab="Year",ylab="Count",main="Incidents Per Year")
legend("topleft", legend=c("property","crops"), col=c(1,2), pch=1)
fatal_injury$BGN_DATE
fatal_injury$BGN_DATE <- as.numeric(as.Date(fatal_injury$BGN_DATE, format="%m/%d/%Y %H:%M:%S"), format="%Y%")
fatal_injury$BGN_DATE
fatal_injury <- subset(storm_data, storm_data$FATALITIES > 0 | storm_data$INJURIES > 0)
fatal_injury <- evtype_reclassify(fatal_injury)
fatal_injury$BGN_DATE
fatal_injury$BGN_DATE <- as.Date(fatal_injury$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
fatal_injury$BGN_DATE <- as.numeric(fatal_injury$BGN_DATE, format="%Y%")
fatal_injury$BGN_DATE
fatal_injury <- subset(storm_data, storm_data$FATALITIES > 0 | storm_data$INJURIES > 0)
dim(fatal_injury)
fatal_injury <- evtype_reclassify(fatal_injury)
fatal_injury$BGN_DATE
```{R}
fatal_injury$BGN_DATE <- as.Date(fatal_injury$BGN_DATE, format="%m/%d/%Y %H:%M:%S")
fatal_injury$BGN_DATE
fatal_injury$BGN_DATE <- as.numeric(fatal_injury$BGN_DATE, format="%Y")
fatal_injury$BGN_DATE
fatal_injury <- subset(storm_data, storm_data$FATALITIES > 0 | storm_data$INJURIES > 0)
fatal_injury <- evtype_reclassify(fatal_injury)
fatal_injury$BGN_DATE <- as.numeric(format(as.Date(fatal_injury$BGN_DATE, format="%m/%d/%Y %H:%M:%S"),"%Y"))
fatal_injury$BGN_DATE
property_crop$BGN_DATE <- as.numeric(format(as.Date(property_crop$BGN_DATE, format="%m/%d/%Y %H:%M:%S"),"%Y"))
str_storm_data
str(storm_data)
rm(list=ls())
